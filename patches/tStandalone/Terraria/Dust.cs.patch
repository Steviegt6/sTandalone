--- src/tModLoader/Terraria/Dust.cs
+++ src/tStandalone/Terraria/Dust.cs
@@ -4,8 +_,6 @@
 using Terraria.GameContent.Events;
 using Terraria.Graphics.Shaders;
 using Terraria.Utilities;
-using Terraria.ID;
-using Terraria.ModLoader;
 
 namespace Terraria
 {
@@ -31,7 +_,6 @@
 		public ArmorShaderData shader;
 		public object customData;
 		public bool firstFrame;
-		internal int realType = -1;
 
 		public static Dust NewDustPerfect(Vector2 Position, int Type, Vector2? Velocity = null, int Alpha = 0, Color newColor = default(Color), float Scale = 1f) {
 			Dust dust = Main.dust[NewDust(Position, 0, 0, Type, 0f, 0f, Alpha, newColor, Scale)];
@@ -163,7 +_,6 @@
 				if (dust.type == 80)
 					dust.alpha = 50;
 
-				ModDust.SetupDust(dust);
 				if (dust.type == 34 || dust.type == 35 || dust.type == 152) {
 					dust.velocity *= 0.1f;
 					dust.velocity.Y = -0.5f;
@@ -250,9 +_,6 @@
 		}
 
 		public static int dustWater() {
-			if (Main.waterStyle >= WaterStyleLoader.vanillaWaterCount)
-				return WaterStyleLoader.GetWaterStyle(Main.waterStyle).GetSplashDust();
-
 			switch (Main.waterStyle) {
 				case 2:
 					return 98;
@@ -292,13 +_,6 @@
 						continue;
 
 					dCount += 1f;
-					ModDust.SetupUpdateType(dust);
-					ModDust modDust = ModDust.GetDust(dust.type);
-					if (modDust != null && !modDust.Update(dust)) {
-						ModDust.TakeDownUpdateType(dust);
-						continue;
-					}
-
 					if (dust.scale > 10f)
 						dust.active = false;
 
@@ -1550,7 +_,7 @@
 
 						Lighting.AddLight((int)(dust.position.X / 16f), (int)(dust.position.Y / 16f), num98 * 0.7f, num98, num98 * 0.8f);
 					}
-					else if (modDust == null || !modDust.MidUpdate(dust)) {
+					else {
 						dust.velocity.X *= 0.99f;
 					}
 
@@ -1772,8 +_,6 @@
 
 					if (dust.scale < num107)
 						dust.active = false;
-
-					ModDust.TakeDownUpdateType(dust);
 				}
 				else {
 					dust.active = false;
@@ -1796,13 +_,6 @@
 		}
 
 		public Color GetAlpha(Color newColor) {
-			ModDust modDust = ModDust.GetDust(type);
-			if (modDust != null) {
-				Color? modColor = modDust.GetAlpha(this, newColor);
-				if (modColor.HasValue)
-					return modColor.Value;
-			}
-
 			float num = (float)(255 - alpha) / 255f;
 			int num2 = type;
 			if ((uint)(num2 - 299) <= 2u) {
