--- src/tModLoader/Terraria/TileObject.cs
+++ src/tStandalone/Terraria/TileObject.cs
@@ -138,7 +_,7 @@
 			return true;
 		}
 
-		public static bool CanPlace(int x, int y, int type, int style, int dir, out TileObject objectData, bool onlyCheck = false, bool checkStay = false) {
+		public static bool CanPlace(int x, int y, int type, int style, int dir, out TileObject objectData, bool onlyCheck = false) {
 			TileObjectData tileData = TileObjectData.GetTileData(type, style);
 			objectData = Empty;
 			if (tileData == null)
@@ -281,7 +_,7 @@
 				for (int i = 0; i < tileData2.Width; i++) {
 					for (int j = 0; j < tileData2.Height; j++) {
 						Tile tileSafely = Framing.GetTileSafely(num8 + i, num9 + j);
-						bool flag2 = !tileData2.LiquidPlace(tileSafely, checkStay);
+						bool flag2 = !tileData2.LiquidPlace(tileSafely);
 						bool flag3 = false;
 						if (tileData2.AnchorWall) {
 							num25 += 1f;
@@ -292,7 +_,7 @@
 						}
 
 						bool flag4 = false;
-						if (tileSafely.active() && (!Main.tileCut[tileSafely.type] || tileSafely.type == 484) && !TileID.Sets.BreakableWhenPlacing[tileSafely.type] && !checkStay)
+						if (tileSafely.active() && (!Main.tileCut[tileSafely.type] || tileSafely.type == 484) && !TileID.Sets.BreakableWhenPlacing[tileSafely.type])
 							flag4 = true;
 
 						if (flag4 || flag2 || flag3) {
