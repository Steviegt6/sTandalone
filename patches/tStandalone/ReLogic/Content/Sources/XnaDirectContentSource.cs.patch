--- src/tModLoader/ReLogic/Content/Sources/XnaDirectContentSource.cs
+++ src/tStandalone/ReLogic/Content/Sources/XnaDirectContentSource.cs
@@ -8,7 +_,6 @@
 	{
 		private readonly string _rootDirectory;
 		private readonly HashSet<string> _files = new HashSet<string>();
-		private readonly HashSet<string> _filesWithoutExtensions = new HashSet<string>();
 		private readonly RejectedAssetCollection _rejections = new RejectedAssetCollection();
 
 		public IContentValidator ContentValidator {
@@ -23,12 +_,9 @@
 
 		private void BuildFileMap() {
 			_files.Clear();
-			_filesWithoutExtensions.Clear();
 			string[] files = Directory.GetFiles(_rootDirectory, "*.xnb", SearchOption.AllDirectories);
 			foreach (string text in files) {
-				string textLower = text.ToLower();
-				_files.Add(textLower);
-				_filesWithoutExtensions.Add(textLower.Substring(0, text.Length-4));
+				_files.Add(text.ToLower());
 			}
 		}
 
@@ -61,7 +_,5 @@
 		}
 
 		public bool TryGetRejections(List<string> rejectionReasons) => _rejections.TryGetRejections(rejectionReasons);
-
-		public IEnumerable<string> EnumerateFiles() => _filesWithoutExtensions;
 	}
 }
