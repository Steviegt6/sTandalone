--- src/tModLoader/Terraria/GameInput/PlayerInput.cs
+++ src/tStandalone/Terraria/GameInput/PlayerInput.cs
@@ -8,7 +_,6 @@
 using Terraria.GameContent.UI.Chat;
 using Terraria.GameContent.UI.States;
 using Terraria.ID;
-using Terraria.ModLoader;
 using Terraria.Social;
 using Terraria.UI;
 using Terraria.UI.Gamepad;
@@ -27,9 +_,6 @@
 		public static List<string> KnownTriggers = new List<string> {
 			"MouseLeft",
 			"MouseRight",
-			"MouseMiddle",
-			"MouseXButton1",
-			"MouseXButton2",
 			"Up",
 			"Down",
 			"Left",
@@ -320,21 +_,9 @@
 			}
 		}
 
-		// To allow mod hotkeys to load, need to reinitialize after load.
-		internal static bool reinitialize;
-		private static void ReInitialize() {
-			Profiles.Clear();
-			OriginalProfiles.Clear();
-			Initialize_Inner(); //Mirsario: To not repeat code in patches, reuse the one that was previously in Initialize().
-			Load(); // Loads the JSON into the Profiles above
-			reinitialize = false;
-		}
 		public static void Initialize() {
 			Main.InputProfiles.OnProcessText += PrettyPrintProfiles;
 			Player.Hooks.OnEnterWorld += Hook_OnEnterWorld;
-			Initialize_Inner();
-		}
-		private static void Initialize_Inner() {
 			PlayerInputProfile playerInputProfile = new PlayerInputProfile("Redigit's Pick");
 			playerInputProfile.Initialize(PresetProfiles.Redigit);
 			Profiles.Add(playerInputProfile.Name, playerInputProfile);
@@ -382,9 +_,7 @@
 		}
 
 		public static void Load() {
-			if (!Main.InputProfiles.Load())
-				return; // fixes strange bug caused by deleting input profiles.json in game and reloading mods.
-
+			Main.InputProfiles.Load();
 			Dictionary<string, PlayerInputProfile> dictionary = new Dictionary<string, PlayerInputProfile>();
 			string currentValue = null;
 			Main.InputProfiles.Get("Selected Profile", ref currentValue);
@@ -514,9 +_,6 @@
 		}
 
 		public static void UpdateInput() {
-			if (reinitialize)
-				ReInitialize();
-
 			Triggers.Reset();
 			ScrollWheelValueOld = ScrollWheelValue;
 			ScrollWheelValue = 0;
@@ -547,9 +_,6 @@
 			UpdateMainMouse();
 			Main.mouseLeft = Triggers.Current.MouseLeft;
 			Main.mouseRight = Triggers.Current.MouseRight;
-			Main.mouseMiddle = Triggers.Current.MouseMiddle;
-			Main.mouseXButton1 = Triggers.Current.MouseXButton1;
-			Main.mouseXButton2 = Triggers.Current.MouseXButton2;
 			CacheZoomableValues();
 			if (num != 0 && PlayerInput.OnActionableInput != null)
 				PlayerInput.OnActionableInput();
@@ -740,8 +_,6 @@
 				flag = true;
 			}
 
-			// TODO: We might just need a bool for while reloading.
-			if (player.HeldItem.type >= ItemID.Sets.GamepadWholeScreenUseRange.Length) return false;
 			bool flag4 = ItemID.Sets.GamepadWholeScreenUseRange[player.inventory[player.selectedItem].type] || player.scope;
 			int num3 = player.inventory[player.selectedItem].tileBoost + ItemID.Sets.GamepadExtraRange[player.inventory[player.selectedItem].type];
 			if (player.yoyoString && ItemID.Sets.Yoyo[player.inventory[player.selectedItem].type])
@@ -1020,9 +_,6 @@
 			List<string> list = new List<string> {
 				"MouseLeft",
 				"MouseRight",
-				"MouseMiddle",
-				"MouseXButton1",
-				"MouseXButton2",
 				"Inventory"
 			};
 
@@ -1204,7 +_,7 @@
 					if (DpadSnapCooldown[i] == 0) {
 						int num = 6;
 						if (ItemSlot.IsABuildingItem(player.inventory[player.selectedItem]))
-							num = PlayerHooks.TotalUseTime(player.inventory[player.selectedItem].useTime, player, player.inventory[player.selectedItem]);
+							num = player.inventory[player.selectedItem].useTime;
 
 						DpadSnapCooldown[i] = num;
 						zero += vector;
@@ -1446,9 +_,6 @@
 						case InputMode.Keyboard:
 							c.KeyStatus["MouseLeft"].Add("Mouse1");
 							c.KeyStatus["MouseRight"].Add("Mouse2");
-							c.KeyStatus["MouseMiddle"].Add("Mouse3");
-							c.KeyStatus["MouseXButton1"].Add("Mouse4");
-							c.KeyStatus["MouseXButton2"].Add("Mouse5");
 							c.KeyStatus["Up"].Add("W");
 							c.KeyStatus["Down"].Add("S");
 							c.KeyStatus["Left"].Add("A");
@@ -1486,9 +_,6 @@
 							c.KeyStatus["MouseLeft"].Add("Mouse1");
 							c.KeyStatus["MouseLeft"].Add("Space");
 							c.KeyStatus["MouseRight"].Add("Mouse2");
-							c.KeyStatus["MouseMiddle"].Add("Mouse3");
-							c.KeyStatus["MouseXButton1"].Add("Mouse4");
-							c.KeyStatus["MouseXButton2"].Add("Mouse5");
 							c.KeyStatus["Up"].Add("W");
 							c.KeyStatus["Up"].Add("Up");
 							c.KeyStatus["Down"].Add("S");
@@ -1560,9 +_,6 @@
 						case InputMode.Keyboard:
 							c.KeyStatus["MouseLeft"].Add("Mouse1");
 							c.KeyStatus["MouseRight"].Add("Mouse2");
-							c.KeyStatus["MouseMiddle"].Add("Mouse3");
-							c.KeyStatus["MouseXButton1"].Add("Mouse4");
-							c.KeyStatus["MouseXButton2"].Add("Mouse5");
 							c.KeyStatus["Up"].Add("W");
 							c.KeyStatus["Down"].Add("S");
 							c.KeyStatus["Left"].Add("A");
@@ -1600,9 +_,6 @@
 							c.KeyStatus["MouseLeft"].Add("Mouse1");
 							c.KeyStatus["MouseLeft"].Add("Space");
 							c.KeyStatus["MouseRight"].Add("Mouse2");
-							c.KeyStatus["MouseMiddle"].Add("Mouse3");
-							c.KeyStatus["MouseXButton1"].Add("Mouse4");
-							c.KeyStatus["MouseXButton2"].Add("Mouse5");
 							c.KeyStatus["Up"].Add("W");
 							c.KeyStatus["Up"].Add("Up");
 							c.KeyStatus["Down"].Add("S");
@@ -1673,9 +_,6 @@
 						case InputMode.Keyboard:
 							c.KeyStatus["MouseLeft"].Add("Mouse1");
 							c.KeyStatus["MouseRight"].Add("Mouse2");
-							c.KeyStatus["MouseMiddle"].Add("Mouse3");
-							c.KeyStatus["MouseXButton1"].Add("Mouse4");
-							c.KeyStatus["MouseXButton2"].Add("Mouse5");
 							c.KeyStatus["Up"].Add("W");
 							c.KeyStatus["Down"].Add("S");
 							c.KeyStatus["Left"].Add("A");
@@ -1713,9 +_,6 @@
 							c.KeyStatus["MouseLeft"].Add("Mouse1");
 							c.KeyStatus["MouseLeft"].Add("Space");
 							c.KeyStatus["MouseRight"].Add("Mouse2");
-							c.KeyStatus["MouseMiddle"].Add("Mouse3");
-							c.KeyStatus["MouseXButton1"].Add("Mouse4");
-							c.KeyStatus["MouseXButton2"].Add("Mouse5");
 							c.KeyStatus["Up"].Add("W");
 							c.KeyStatus["Up"].Add("Up");
 							c.KeyStatus["Down"].Add("S");
@@ -1786,9 +_,6 @@
 						case InputMode.Keyboard:
 							c.KeyStatus["MouseLeft"].Add("Mouse1");
 							c.KeyStatus["MouseRight"].Add("Mouse2");
-							c.KeyStatus["MouseMiddle"].Add("Mouse3");
-							c.KeyStatus["MouseXButton1"].Add("Mouse4");
-							c.KeyStatus["MouseXButton2"].Add("Mouse5");
 							c.KeyStatus["Up"].Add("W");
 							c.KeyStatus["Down"].Add("S");
 							c.KeyStatus["Left"].Add("A");
@@ -1826,9 +_,6 @@
 							c.KeyStatus["MouseLeft"].Add("Mouse1");
 							c.KeyStatus["MouseLeft"].Add("Space");
 							c.KeyStatus["MouseRight"].Add("Mouse2");
-							c.KeyStatus["MouseMiddle"].Add("Mouse3");
-							c.KeyStatus["MouseXButton1"].Add("Mouse4");
-							c.KeyStatus["MouseXButton2"].Add("Mouse5");
 							c.KeyStatus["Up"].Add("W");
 							c.KeyStatus["Up"].Add("Up");
 							c.KeyStatus["Down"].Add("S");
